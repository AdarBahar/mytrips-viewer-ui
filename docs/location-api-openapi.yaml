openapi: 3.0.3
info:
  title: Location API
  description: |
    Real-time location tracking and route history API for MyTrips Viewer.
    
    This API provides endpoints for:
    - Fetching user lists with location data
    - Retrieving live location updates
    - Accessing historical location records
    - Streaming real-time location changes
    
    **Authentication**: All endpoints require both `Authorization: Bearer {token}` and `X-API-Token: {token}` headers.
  version: 1.0.0
  contact:
    name: MyTrips Support
    url: https://www.bahar.co.il

servers:
  - url: https://www.bahar.co.il/location/api
    description: Production server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

paths:
  /users.php:
    get:
      summary: Get list of users
      description: Retrieve a list of all users with optional location data
      operationId: getUsers
      tags:
        - Users
      parameters:
        - name: with_location_data
          in: query
          description: Include location data for each user
          required: false
          schema:
            type: string
            enum: ["true", "false"]
            default: "true"
        - name: include_counts
          in: query
          description: Include location record counts
          required: false
          schema:
            type: string
            enum: ["true", "false"]
            default: "false"
        - name: include_metadata
          in: query
          description: Include user metadata
          required: false
          schema:
            type: string
            enum: ["true", "false"]
            default: "false"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /live/latest.php:
    get:
      summary: Get latest location for user(s)
      description: |
        Retrieve the most recent location data for one or more users.
        
        **Updated in v1.0.0**: Now includes `all` and `include_inactive` parameters for better filtering.
      operationId: getLatestLocation
      tags:
        - Live Tracking
      parameters:
        - name: user
          in: query
          description: Username to get location for
          required: true
          schema:
            type: string
            example: "Adar"
        - name: all
          in: query
          description: Get locations for all users (if false, only specified user)
          required: false
          schema:
            type: string
            enum: ["true", "false"]
            default: "false"
        - name: max_age
          in: query
          description: Maximum age of location data in seconds
          required: false
          schema:
            type: integer
            default: 3600
            example: 3600
        - name: include_inactive
          in: query
          description: Include inactive users in results
          required: false
          schema:
            type: string
            enum: ["true", "false"]
            default: "false"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      locations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Location'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /live/stream.php:
    get:
      summary: Stream location updates
      description: Get location updates since a specific timestamp (cursor-based polling)
      operationId: streamLocations
      tags:
        - Live Tracking
      parameters:
        - name: user
          in: query
          description: Username to stream locations for
          required: true
          schema:
            type: string
            example: "Adar"
        - name: since
          in: query
          description: Unix timestamp (milliseconds) to get updates since
          required: true
          schema:
            type: integer
            format: int64
            example: 1698765432000
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      points:
                        type: array
                        items:
                          $ref: '#/components/schemas/Location'
                      cursor:
                        type: integer
                        format: int64
                        description: New cursor value for next poll
                        example: 1698765435000
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /live/history.php:
    get:
      summary: Get location history (cache)
      description: |
        Retrieve location history from cache for fast queries.
        Best for recent data (last hour, last 24 hours).
      operationId: getLocationHistoryCache
      tags:
        - Route History
      parameters:
        - name: user
          in: query
          description: Username to get history for
          required: true
          schema:
            type: string
            example: "Adar"
        - name: duration
          in: query
          description: Duration in seconds (3600 = 1 hour, 86400 = 24 hours)
          required: false
          schema:
            type: integer
            default: 3600
            example: 86400
        - name: limit
          in: query
          description: Maximum number of points to return
          required: false
          schema:
            type: integer
            default: 1000
            maximum: 1000
            example: 1000
        - name: offset
          in: query
          description: Offset for pagination
          required: false
          schema:
            type: integer
            default: 0
            example: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      points:
                        type: array
                        items:
                          $ref: '#/components/schemas/Location'
                      total:
                        type: integer
                        description: Total number of points available
                        example: 5432
                      duration:
                        type: integer
                        description: Total duration in seconds
                        example: 3600
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Bearer token authentication
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Token
      description: API token header

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: "Adar"
        display_name:
          type: string
          example: "Adar Bahar"
        email:
          type: string
          format: email
          example: "adar@example.com"
        status:
          type: string
          example: "active"

    Location:
      type: object
      properties:
        latitude:
          type: string
          description: Latitude coordinate
          example: "32.0853"
        longitude:
          type: string
          description: Longitude coordinate
          example: "34.7818"
        speed:
          type: number
          format: float
          description: Speed in km/h
          example: 45.5
        accuracy:
          type: number
          format: float
          description: GPS accuracy in meters
          example: 10.5
        battery_level:
          type: integer
          description: Battery level percentage
          example: 85
        server_time:
          type: string
          format: date-time
          description: Server timestamp
          example: "2024-10-28T14:30:00Z"
        timestamp:
          type: string
          format: date-time
          description: Device timestamp
          example: "2024-10-28T14:30:00Z"

  responses:
    UnauthorizedError:
      description: Authentication failed
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              message:
                type: string
                example: "Unauthorized"

